<!DOCTYPE html>
<html>
<head>
    <title>Marc McIntosh</title>

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">

    <!--  
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage 
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/linker/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.
        
        To customize any part of the built-in behavior, just edit your Gruntfile.
        For example, here are a few things you could do:
            
            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/colorbrewer.css">
    <link rel="stylesheet" href="/styles/custom/nprogress.css">
    <link rel="stylesheet" href="/styles/dcjs/dc.css">
    <link rel="stylesheet" href="/styles/icon.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/nvd3/nv.d3.css">
    <link rel="stylesheet" href="/styles/semenatic/semantic.css">
    <link rel="stylesheet" href="/styles/stickyfoo.css">
    <!--STYLES END-->
<style>
    /* centered columns styles */
.row-centered {
    text-align:center;
}
.col-centered {
    display:inline-block;
    float:none;
    /* reset the text-align */
    text-align:left;
    /* inline-block space fix */
    margin-right:-4px;
}
</style>
<style>
.sticky {
  position: absolute;
  bottom: 0px;
}
</style>
</head>

<body>
{{> ui-sidebar }}
<div class="pusher">
{{> ui-nav }}
{{> errors}}
{{{ body }}}
{{> footer }}
</div>
<!--
    Client-side Templates
    ========================

    HTML templates are important prerequisites of modern, rich client applications.
    To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
    that you load these templates client-side.

    By default, your Gruntfile is configured to automatically load and precompile
    client-side JST templates in your `assets/linker/templates` folder, then
    include them here automatically (between TEMPLATES and TEMPLATES END).

    To customize this behavior to fit your needs, just edit your Gruntfile.
    For example, here are a few things you could do:

        + Import templates from other directories
        + Use a different template engine (handlebars, jade, dust, etc.)
        + Internationalize your client-side templates using a server-side
          stringfile before they're served.
-->

<!--TEMPLATES-->

<!--TEMPLATES END-->

<!--

  Client-side Javascript
  ========================

  You can always bring in JS files manually with `script` tags, or asynchronously
  on the client using a solution like AMD (RequireJS).  Or, if you like, you can
  take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

  By default, filesin your `assets/linker/js` folder are included here
  automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
  CoffeeScript (.coffee) are supported. In production, your scripts will be minified
  and concatenated into a single file.

  To customize any part of the built-in behavior, just edit your Gruntfile.
  For example, here are a few things you could do:

      + Change the order of your scripts
      + Import scripts from other directories
      + Use a different preprocessor, like TypeScript

-->

<!--SCRIPTS-->
<script src="/js/dependencies/sails.io.js"></script>
<script src="/js/dependencies/00-jquery.js"></script>
<script src="/js/dependencies/01-handlebars-v1.3.0.js"></script>
<script src="/js/dependencies/02-bootstrap.js"></script>
<script src="/js/dependencies/03-nprogress.js"></script>
<script src="/js/dependencies/04-d3.v3.min.js"></script>
<script src="/js/dependencies/05-topojson.js"></script>
<script src="/js/dependencies/08-nv.d3.js"></script>
<script src="/js/d3.geo.projection.js"></script>
<script src="/js/d3Bits/colorbrewer.js"></script>
<script src="/js/d3Bits/math.js"></script>
<script src="/js/d3Bits/ukMap.js"></script>
<script src="/js/dcjs/01-crossfilter.js"></script>
<script src="/js/dcjs/02-dc.js"></script>
<script src="/js/jquery.stickyfoo.js"></script>
<script src="/js/my-app.js"></script>
<script src="/js/semantic/semantic.js"></script>
<script src="/js/stream_layers.js"></script>
<!--SCRIPTS END-->
<script type="text/javascript">
$('.sidebar')
  .sidebar('attach events', '.toggle.item')
</script>
<script type="text/javascript">
$('.ui.accordion')
  .accordion('open()')
;
</script>

<script>
window.twttr = (function (d, s, id) {
  var t, js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src= "https://platform.twitter.com/widgets.js";
  fjs.parentNode.insertBefore(js, fjs);
  return window.twttr || (t = { _e: [], ready: function (f) { t._e.push(f) } });
}(document, "script", "twitter-wjs"));</script>
</body>
</html>
